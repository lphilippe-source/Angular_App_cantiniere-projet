{"version":3,"sources":["webpack:///src/app/inscription/inscription.page.scss","webpack:///src/app/inscription/inscription.page.html","webpack:///src/app/inscription/inscription.module.ts","webpack:///src/app/shared-modules/shared-modules.module.ts","webpack:///src/app/inscription/inscription-routing.module.ts","webpack:///src/app/inscription/inscription.page.ts"],"names":["InscriptionPageModule","imports","declarations","SharedModulesModule","exports","routes","path","component","InscriptionPageRoutingModule","forChild","InscriptionPage","formBuilder","service","toastController","router","user","name","undefined","firstname","email","password","wallet","sex","isValid","isConnected","passwordRule","sessionStorage","getItem","setTimeout","navigate","userForm","group","passwordCheck","valueChanges","subscribe","values","value","tempValid","property","passwordStrenghtTest","body","document","querySelector","elements","querySelectorAll","register","res","forEach","element","disabled","style","cursor","presentToast","error","status","mail","color","ngOnInit","verifyEmail","event","key","length","rule1","rule2","rule3","rule4","result1","match","result2","result3","result4","selector","template"],"mappings":"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","file":"inscription-inscription-module-es5.js","sourcesContent":["export default \".contenu {\\n  width: 100%;\\n  position: absolute;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n\\nh1 {\\n  color: white;\\n  text-align: center;\\n  margin: auto;\\n}\\n\\nion-button {\\n  margin: auto;\\n  margin-top: 15px;\\n  display: block;\\n  width: 110px;\\n  text-transform: none;\\n}\\n\\nion-select, ion-input {\\n  background-color: white;\\n}\\n\\n#passwordRule {\\n  font-weight: bold;\\n}\\n\\n@media (max-width: 576px) {\\n  h1 {\\n    font-size: 30px;\\n    margin-top: 10px;\\n  }\\n\\n  form {\\n    width: 90%;\\n    margin: auto;\\n  }\\n\\n  ion-input, ion-select {\\n    border-radius: 10px;\\n    margin-bottom: 10px;\\n  }\\n\\n  ion-input {\\n    --padding-start:16px;\\n  }\\n}\\n\\n@media (min-width: 576px) {\\n  h1 {\\n    font-size: 60px;\\n    margin-bottom: 30px;\\n  }\\n\\n  form {\\n    max-width: 800px;\\n    margin: auto;\\n  }\\n\\n  select {\\n    display: block;\\n    width: 100%;\\n    height: 38px;\\n  }\\n\\n  ion-input, select {\\n    margin-bottom: 40px;\\n  }\\n\\n  #passwordRule {\\n    position: relative;\\n    top: -10px;\\n    margin-bottom: 15px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2luc2NyaXB0aW9uLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtFQUNBLFFBQUE7RUFDQSwyQkFBQTtBQUNGOztBQUVBO0VBQ0ksWUFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtBQUNKOztBQUVBO0VBQ0UsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLFlBQUE7RUFDQSxvQkFBQTtBQUNGOztBQUVBO0VBQ0UsdUJBQUE7QUFDRjs7QUFFQTtFQUNFLGlCQUFBO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLGVBQUE7SUFDQSxnQkFBQTtFQUNGOztFQUVBO0lBQ0UsVUFBQTtJQUNBLFlBQUE7RUFDRjs7RUFFQTtJQUNFLG1CQUFBO0lBQ0EsbUJBQUE7RUFDRjs7RUFFQTtJQUNFLG9CQUFBO0VBQ0Y7QUFDRjs7QUFHQTtFQUNFO0lBQ0UsZUFBQTtJQUNBLG1CQUFBO0VBREY7O0VBSUE7SUFDRSxnQkFBQTtJQUNBLFlBQUE7RUFERjs7RUFJQTtJQUNFLGNBQUE7SUFDQSxXQUFBO0lBQ0EsWUFBQTtFQURGOztFQUlBO0lBQ0UsbUJBQUE7RUFERjs7RUFJQTtJQUNFLGtCQUFBO0lBQ0EsVUFBQTtJQUNBLG1CQUFBO0VBREY7QUFDRiIsImZpbGUiOiJpbnNjcmlwdGlvbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudSB7XG4gIHdpZHRoOjEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKVxufVxuXG5oMXtcbiAgICBjb2xvcjp3aGl0ZTtcbiAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICBtYXJnaW46YXV0bztcbn1cblxuaW9uLWJ1dHRvbntcbiAgbWFyZ2luOmF1dG87XG4gIG1hcmdpbi10b3A6MTVweDtcbiAgZGlzcGxheTpibG9jaztcbiAgd2lkdGg6MTEwcHg7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG5pb24tc2VsZWN0ICwgaW9uLWlucHV0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbiNwYXNzd29yZFJ1bGUge1xuICBmb250LXdlaWdodDpib2xkO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDo1NzZweCl7XG4gIGgxIHtcbiAgICBmb250LXNpemU6MzBweDtcbiAgICBtYXJnaW4tdG9wOjEwcHg7XG4gIH1cblxuICBmb3JtIHtcbiAgICB3aWR0aDo5MCU7XG4gICAgbWFyZ2luOmF1dG87XG4gIH1cblxuICBpb24taW5wdXQgLCBpb24tc2VsZWN0e1xuICAgIGJvcmRlci1yYWRpdXM6MTBweDtcbiAgICBtYXJnaW4tYm90dG9tOjEwcHg7XG4gIH1cblxuICBpb24taW5wdXQge1xuICAgIC0tcGFkZGluZy1zdGFydDoxNnB4O1xuICB9XG59XG5cblxuQG1lZGlhIChtaW4td2lkdGg6NTc2cHgpe1xuICBoMSB7XG4gICAgZm9udC1zaXplOjYwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTozMHB4O1xuICB9XG5cbiAgZm9ybSB7XG4gICAgbWF4LXdpZHRoOjgwMHB4O1xuICAgIG1hcmdpbjphdXRvO1xuICB9XG5cbiAgc2VsZWN0IHtcbiAgICBkaXNwbGF5OmJsb2NrO1xuICAgIHdpZHRoOjEwMCU7XG4gICAgaGVpZ2h0OjM4cHg7XG4gIH1cblxuICBpb24taW5wdXQgLCBzZWxlY3Qge1xuICAgIG1hcmdpbi1ib3R0b206NDBweDtcbiAgfVxuXG4gICNwYXNzd29yZFJ1bGUge1xuICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgIHRvcDotMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOjE1cHg7XG4gIH1cbn1cblxuXG5cblxuXG5cbiJdfQ== */\";","export default \"<app-header></app-header>\\n\\n\\n<ion-content>\\n  <!-- Voici le contenu normal de la page, qui s'affiche si l'utilisateur n'est pas connecté -->\\n  <div *ngIf=\\\"!isConnected\\\" class=\\\"contenu\\\">\\n    <h1>\\n      Inscription\\n    </h1>\\n    <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"register()\\\">\\n      <ion-label class=\\\"ion-margin-bottom\\\" color=\\\"light\\\">\\n        Nom\\n      </ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\n      <ion-label class=\\\"ion-margin-bottom\\\" color=\\\"light\\\">\\n        Prénom\\n      </ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"firstname\\\"></ion-input>\\n      <ion-label class=\\\"ion-margin-bottom\\\" color=\\\"light\\\">\\n        Sexe\\n      </ion-label>\\n      <ion-select class=\\\"ion-hide-sm-up\\\" formControlName=\\\"sex\\\">\\n        <ion-select-option value=\\\"0\\\">Homme</ion-select-option>\\n        <ion-select-option value=\\\"1\\\">Femme</ion-select-option>\\n        <ion-select-option value=\\\"2\\\">Autre</ion-select-option>\\n      </ion-select>\\n      <select class=\\\"ion-hide-sm-down\\\" formControlName=\\\"sex\\\">\\n        <option value=\\\"\\\" selected=\\\"selected\\\">Veuillez sélectionner une valeur</option>\\n        <option value=\\\"0\\\">Homme</option>\\n        <option value=\\\"1\\\">Femme</option>\\n        <option value=\\\"2\\\">Autre</option>\\n      </select>\\n      <ion-label class=\\\"ion-margin-bottom\\\" color=\\\"light\\\">\\n        Email\\n      </ion-label>\\n      <ion-input type=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\n      <!-- Le bloc suivant apparaît quand l'utilisateur tente de valider alors qu'il a entré un mot de passe trop faible -->\\n      <ion-text *ngIf=\\\"passwordRule\\\" id=\\\"passwordRule\\\">\\n        <p>\\n          Votre mot de passe doit faire 8 caractères au minimum et contenir au moins une majuscule, une minuscule, un chiffre et un caractère spécial\\n        </p>\\n      </ion-text>\\n      <ion-label class=\\\"ion-margin-bottom\\\" color=\\\"light\\\">\\n        Mot de passe\\n      </ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n      <ion-label class=\\\"ion-margin-bottom\\\" color=\\\"light\\\">\\n        Vérifier mot de passe\\n      </ion-label>\\n      <ion-input (keyup)=\\\"registerKey($event)\\\" type=\\\"password\\\" formControlName=\\\"passwordCheck\\\"></ion-input>\\n      <div>\\n        <ion-button [disabled]=\\\"!this.isValid\\\" type=\\\"submit\\\" size=\\\"large\\\">\\n          Valider\\n        </ion-button>\\n      </div>\\n    </form>\\n  </div>\\n  <!-- S'il est connecté, on ne donne pas accès à cette requête -->\\n  <div *ngIf=\\\"isConnected\\\" class=\\\"contenu\\\">\\n    <h1>Vous êtes déjà connectés</h1>\\n  </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InscriptionPageRoutingModule } from './inscription-routing.module';\n\nimport { InscriptionPage } from './inscription.page';\nimport { SharedModulesModule } from '../shared-modules/shared-modules.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    InscriptionPageRoutingModule,\n    SharedModulesModule\n  ],\n  declarations: [InscriptionPage]\n})\nexport class InscriptionPageModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from '../header/header.component';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  declarations: [HeaderComponent],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports:[HeaderComponent]\n})\nexport class SharedModulesModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InscriptionPage } from './inscription.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InscriptionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InscriptionPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { CantiniereAPIService } from '../cantiniere-api.service';\nimport { User } from '../model/User';\nimport { EmailUtils } from '../utils/EmailUtils';\nimport { ToastUtils } from '../utils/ToastUtils';\n\n@Component({\n  selector: 'app-inscription',\n  templateUrl: './inscription.page.html',\n  styleUrls: ['./inscription.page.scss'],\n})\nexport class InscriptionPage implements OnInit {\n  user: User = {\n    name: undefined,\n    firstname: undefined,\n    email: undefined,\n    password: undefined,\n    wallet: 0,\n    sex: undefined\n  };\n  userForm: FormGroup;\n  isValid: boolean = false;\n  isConnected: boolean = false;\n  passwordRule : boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private service: CantiniereAPIService,\n    private toastController: ToastController,\n    private router: Router) { }\n\n  ngOnInit() {\n    // Si un utilisateur est connecté, le template sera différent et on redirigera automatiquement vers l'accueil\n    if (sessionStorage.getItem(\"JWT\")) {\n      this.isConnected = true;\n      setTimeout(() => {\n        this.router.navigate(['home']);\n      }, 3000);\n    }\n\n    this.userForm = this.formBuilder.group({\n      name: \"\",\n      firstname: \"\",\n      sex: \"\",\n      email: \"\",\n      password: \"\",\n      passwordCheck: \"\"\n    });\n    // Si un seul des champs du formulaire n'est pas rempli, le bouton de validation n'est pas actif\n    this.userForm.valueChanges.subscribe(values => {\n      let value = this.userForm.value;\n      let tempValid: boolean = true;\n      for (let property in value) {\n        if (!value[property]) {\n          tempValid = false;\n          break;\n        }\n      }\n      this.isValid = tempValid;\n    });\n  }\n\n  register() {\n    let value = this.userForm.value;\n    // On vérifie que les deux mots de passe sont identiques\n    if (this.userForm.value.password === this.userForm.value.passwordCheck) {\n      // Puis la robustesse du mot de passe\n      if (this.passwordStrenghtTest(this.userForm.value.password)) {\n        // On va itérer sur userForm et attribuer ses propriétés à notre variable User\n        for (let property in this.userForm.value) {\n          // Sauf pour passwordCheck puisque cette propriété n'existe pas\n          if (property != \"passwordCheck\") {\n            this.user[property] = this.userForm.value[property];\n          }\n        }\n        // Variables utilisées plus tard pour empêcher puis réautoriser les différentes actions faisables par l'utilisateur\n        let body = document.querySelector(\"body\");\n        let elements: any = document.querySelectorAll(\"ion-input , ion-button , ion-select\");\n        this.service.register(this.user).subscribe(\n          (res: any) => {\n            // Une fois la requête reçue, on autorisera de nouveau ces actions\n            elements.forEach(element => {\n              element.disabled = false;\n            });\n            body.style.cursor = \"initial\";\n            ToastUtils.presentToast(\"Utilisateur créé!\", \"success\", this.toastController);\n            this.router.navigate([\"home\"]);\n          },\n          (error: any) => {\n            if (error.status === 412) {\n              // Si le problème est que le mail existe déjà, on l'indique en changeant cette valeur dans le formulaire\n              this.userForm = this.formBuilder.group({\n                name: this.user.name,\n                firstname: this.user.firstname,\n                sex: this.user.sex,\n                email: \"Veuillez saisir un autre e-mail\",\n                password: this.user.password,\n                passwordCheck: this.user.password\n              });\n              ToastUtils.presentToast(\"Cet e-mail est déjà utilisé\", \"danger\", this.toastController);\n              let mail: any = document.querySelector(\"ion-input[formControlName='email']\");\n              mail.style.color = \"red\";\n              setTimeout(() => {\n                mail.style.color = \"black\";\n              }, 1500);\n            }\n            else {\n              // Si une autre erreur se produit\n              this.ngOnInit();\n              ToastUtils.presentToast(\"Une erreur s'est produite\", \"danger\", this.toastController);\n            }\n          }\n        );\n        // On désactive les input et le bouton de validation et on affiche le curseur d'attente jusqu'à ce que la requête soit traitée\n        elements.forEach(element => {\n          element.disabled = true;\n          element.style.cursor = \"wait\";\n        });\n        body.style.cursor = \"wait\";\n        if (EmailUtils.verifyEmail(value.email)) {\n\n        }\n        else {\n          ToastUtils.presentToast(\"Veuillez saisir un email valide\", \"danger\", this.toastController);\n        }\n      }\n      else {\n        ToastUtils.presentToast(\"Votre mot de passe n'est pas assez robuste\",\"danger\",this.toastController);\n        this.passwordRule = true;\n        }\n    }\n    else {\n      ToastUtils.presentToast(\"Les deux mots de passe ne sont pas identiques\", \"danger\", this.toastController);\n    }\n  }\n\n  registerKey(event) {\n    // Cet événement est lancé quand l'utilisateur appuie sur la touche Entrée quand il est dans le dernier input\n    if (event.key == \"Enter\") {\n      if (this.isValid) {\n        this.register();\n      }\n    }\n  }\n\n  passwordStrenghtTest(password: string): boolean {\n    // Ce test et ces RegExp vont vérifier que le mot de passe fait au moins 8 caractères de long, contient au moins une minuscule, une majuscule, un chiffre et un caractère spécial\n    if (password.length >= 8) {\n      let rule1 = /[a-z]/;\n      let rule2 = /[A-Z]/;\n      let rule3 = /\\d/;\n      let rule4 = /\\W/;\n      \n      let result1 = password.match(rule1);\n      let result2 = password.match(rule2);\n      let result3 = password.match(rule3);\n      let result4 = password.match(rule4);\n      \n      if (result1 && result2 && result3 && result4){\n        return true;\n      }\n      else{\n        return false;\n      }\n    }\n  }\n\n}\n"]}