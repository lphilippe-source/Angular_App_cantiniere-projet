{"version":3,"sources":["./src/app/authentification/authentification.module.ts","./src/app/authentification/authentification.page.ts","./src/app/authentification/authentification.page.scss","./src/app/authentification/authentification-routing.module.ts","./src/app/authentification/authentification.page.html","./node_modules/@auth0/angular-jwt/__ivy_ngcc__/fesm2015/auth0-angular-jwt.js"],"names":[],"mappings":"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AAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiG;AACtD;AACD;AACd;AAC6B;;AAEjB;AACxC,wBAAwB,4DAAc;;AAEtC;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;AACA;AACA,qC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,oCAAoC,sDAAe,eAAe;AAChI,yBAAyB,gEAAyB,EAAE,0DAA0D;AAC9G;AACA,KAAK,gCAAgC,OAAO,oDAAM,wBAAwB;AAC1E;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB,EAAE;AAClD;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAW,EAAE,MAAM;AAC7D,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iDAAI,aAAa,+DAAQ;AAC5C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kCAAkC,sDAAe,eAAe,sDAAe,oBAAoB,sDAAe,CAAC,wDAAQ,GAAG;AACxL,uBAAuB,gEAAyB,EAAE,sDAAsD;AACxG;AACA,KAAK,gCAAgC,OAAO,oDAAM,wBAAwB,GAAG;AAC7E,KAAK,yBAAyB;AAC9B,KAAK,+BAA+B,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACtE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG,yBAAyB,GAAG;AAC/C,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sEAAiB;AAC9C;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAuB,EAAE,kBAAkB;AAC5D,iBAAiB,8DAAuB,EAAE,yCAAyC,6BAA6B,sDAAe,iBAAiB,EAAE,EAAE;AACpJ;AACA,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,sDAAQ,EAAE;AAC1E;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;;AAEoE;;AAEpE,6C","file":"authentification-authentification-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule ,ReactiveFormsModule } from '@angular/forms';\nimport { AuthentificationPage } from './authentification.page';\nimport { AuthentificationPageRoutingModule } from './authentification-routing.module';\nimport { HeaderComponent } from '../header/header.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    AuthentificationPageRoutingModule\n  ],\n  declarations: [AuthentificationPage,HeaderComponent]\n})\nexport class AuthentificationPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { CantiniereAPIService } from '../cantiniere-api.service';\nimport { ToastUtils } from '../utils/ToastUtils';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\n\n@Component({\n  selector: 'app-authentification',\n  templateUrl: './authentification.page.html',\n  styleUrls: ['./authentification.page.scss'],\n})\nexport class AuthentificationPage implements OnInit {\n  isValid: boolean = false;\n  userForm: FormGroup;\n  // En plus du token brut, ces deux variables vont permettre d'en extraire l'utilisateur authentifié\n  rawToken: string;\n  helper: JwtHelperService = new JwtHelperService()\n  decodedToken;\n  // Cette variable, par défaut à false, passe à vrai si un token est présent en sessionStorage\n  // Cela permet à la page de ne pas être affiché si l'utilisateur est déjà connecté\n  isConnected:boolean = false;\n  originPage: string\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private service: CantiniereAPIService,\n    private toastController: ToastController,\n    private route: Router,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n\n    // recuperation du nom de la page précédente\n    this.originPage = this.activatedRoute.snapshot.paramMap.get(\"originPage\")\n\n    // Si un utilisateur est connecté, le template sera différent et on redirigera automatiquement vers l'accueil\n    if (sessionStorage.getItem(\"JWT\")){\n      this.isConnected = true;\n      setTimeout(()=>{\n        this.route.navigate(['home']);\n      },3000);\n    }\n\n    // On crée ce FormGroup pour réunir les données entrées par l'utilisateur\n    this.userForm = this.formBuilder.group({\n      email: \"\",\n      password: \"\"\n    });\n\n    // Cet observable n'activera le bouton de validation que si les champs sont remplis \n    this.userForm.valueChanges.subscribe(values => {\n      let value = this.userForm.value;\n      if ((value.email !== \"\") && (value.password !== \"\")) {\n        this.isValid = true;\n      }\n      else {\n        this.isValid = false;\n      }\n    });\n  }\n\n  authentificationKey(event){\n    // Cette fonction lance la fonction d'identification quand l'utilisateur a le focus sur le champ de mot de passe et appuie sur Entrée\n    if (event.key == \"Enter\"){\n      if (this.isValid){\n        this.authentification();\n      }\n    }\n  }\n\n  authentification() {\n    // On désactive toutes les actions le temps que la réponse du serveur arrive (et on montre avec le curseur de la souris que le traitement est en cours)\n    let body = document.querySelector('body');\n    let elements: any = document.querySelectorAll('ion-input , ion-button');\n    elements.forEach(element => {\n      element.disabled = true;\n    });\n    body.style.cursor = \"wait\";\n    // On fait la requête d'authentification\n    this.service.authentification(this.userForm.value.email, this.userForm.value.password).subscribe(res => {\n      // Une fois reçue, on stocke le JWT ainsi que sa version décodée, et on fait une seconde requête pour chercher l'avatar de l'utilisateur\n      this.rawToken = res.headers.get(\"Authorization\");\n      sessionStorage.setItem(\"JWT\", this.rawToken);\n      this.decodedToken = this.helper.decodeToken(this.rawToken);\n      this.service.findImg(this.decodedToken.user.id, this.rawToken).subscribe((img: any) => {\n        // Maintenant on va créer un objet contenant les données de l'utilisateur, le stringifier et le stocker en sessionStorage\n        let storedUser = {\n          \"id\": this.decodedToken.user.id,\n          \"name\": this.decodedToken.user.name,\n          \"firstname\": this.decodedToken.user.firstname,\n          \"email\": this.decodedToken.user.email,\n          \"address\": this.decodedToken.user.address,\n          \"postalCode\": this.decodedToken.user.postalCode,\n          \"town\": this.decodedToken.user.town,\n          \"phone\": this.decodedToken.user.phone,\n          \"sex\": this.decodedToken.user.sex,\n          \"wallet\": this.decodedToken.user.wallet,\n          \"image\": img,\n          \"isLunchLady\": this.decodedToken.user.isLunchLady\n        };\n\n        sessionStorage.setItem(\"User\", JSON.stringify(storedUser));\n        // On laisse de nouveau l'utilisateur agir une fois la réponse reçue\n        body.style.cursor = \"initial\"\n        elements.forEach(element => {\n          element.disabled = false;\n        });\n        \n        if(this.originPage == \"panier\"){\n          this.route.navigate([\"panier\"]);\n        } else this.route.navigate([\"home\"]);\n        \n      });\n    },\n    (error:any) => {\n      // Si les identifiants sont incorrects, on l'affiche\n      if (error.status === 401)\n        ToastUtils.presentToast(\"Mot de passe ou e-mail incorrect\", \"danger\", this.toastController);\n         // On laisse de nouveau l'utilisateur agir une fois la réponse reçue\n        body.style.cursor = \"initial\"\n        elements.forEach(element => {\n          element.disabled = false;\n        });\n      });\n  }\n}\n","export default \".contenu {\\n  width: 100%;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n}\\n\\nh1 {\\n  color: white;\\n  text-align: center;\\n  margin: auto;\\n}\\n\\nion-button {\\n  margin: auto;\\n  margin-top: 15px;\\n  display: block;\\n  width: 130px;\\n  height: 55px;\\n  font-size: 15px;\\n  text-transform: none;\\n}\\n\\nion-input {\\n  background-color: white;\\n  --padding-start:16px;\\n}\\n\\n@media (max-width: 576px) {\\n  h1 {\\n    font-size: 30px;\\n    margin-top: 10px;\\n  }\\n\\n  form {\\n    width: 90%;\\n    margin: auto;\\n  }\\n\\n  ion-input {\\n    border-radius: 10px;\\n    margin-bottom: 10px;\\n  }\\n}\\n\\n@media (min-width: 576px) {\\n  h1 {\\n    font-size: 60px;\\n    margin-top: 30px;\\n    margin-bottom: 30px;\\n  }\\n\\n  form {\\n    max-width: 800px;\\n    margin: auto;\\n  }\\n\\n  ion-input {\\n    margin-bottom: 40px;\\n  }\\n\\n  #buttons {\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-around;\\n    max-width: 50%;\\n    margin: auto;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2F1dGhlbnRpZmljYXRpb24ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBO0VBQ0UsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7RUFDQSxnQ0FBQTtBQUhGOztBQU1BO0VBQ0ksWUFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtBQUhKOztBQU1BO0VBQ0UsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtFQUNBLG9CQUFBO0FBSEY7O0FBTUE7RUFDRSx1QkFBQTtFQUNBLG9CQUFBO0FBSEY7O0FBUUE7RUFDRTtJQUNFLGVBQUE7SUFDQSxnQkFBQTtFQUxGOztFQVFBO0lBQ0UsVUFBQTtJQUNBLFlBQUE7RUFMRjs7RUFRQTtJQUNFLG1CQUFBO0lBQ0EsbUJBQUE7RUFMRjtBQUNGOztBQVNBO0VBQ0U7SUFDRSxlQUFBO0lBQ0EsZ0JBQUE7SUFDQSxtQkFBQTtFQVBGOztFQVVBO0lBQ0UsZ0JBQUE7SUFDQSxZQUFBO0VBUEY7O0VBVUE7SUFDRSxtQkFBQTtFQVBGOztFQVVBO0lBQ0UsYUFBQTtJQUNBLG1CQUFBO0lBQ0EsNkJBQUE7SUFDQSxjQUFBO0lBQ0EsWUFBQTtFQVBGO0FBQ0YiLCJmaWxlIjoiYXV0aGVudGlmaWNhdGlvbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpb24tY29udGVudCB7XG4vLyAgICAgLS1iYWNrZ3JvdW5kOiB1cmwoXCIuLi8uLi9hc3NldHMvaW1hZ2VzL3dhbGxwYXBlcl90ZXJuZS5qcGdcIikgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXIgLyBjb3Zlcjtcbi8vIH1cblxuLmNvbnRlbnUge1xuICB3aWR0aDoxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xufVxuXG5oMXtcbiAgICBjb2xvcjp3aGl0ZTtcbiAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICBtYXJnaW46YXV0bztcbn1cblxuaW9uLWJ1dHRvbntcbiAgbWFyZ2luOmF1dG87XG4gIG1hcmdpbi10b3A6MTVweDtcbiAgZGlzcGxheTpibG9jaztcbiAgd2lkdGg6MTMwcHg7XG4gIGhlaWdodDo1NXB4O1xuICBmb250LXNpemU6MTVweDtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbmlvbi1pbnB1dCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAtLXBhZGRpbmctc3RhcnQ6MTZweDtcbiAgXG59XG5cblxuQG1lZGlhIChtYXgtd2lkdGg6NTc2cHgpe1xuICBoMSB7XG4gICAgZm9udC1zaXplOjMwcHg7XG4gICAgbWFyZ2luLXRvcDoxMHB4O1xuICB9XG5cbiAgZm9ybSB7XG4gICAgd2lkdGg6OTAlO1xuICAgIG1hcmdpbjphdXRvO1xuICB9XG5cbiAgaW9uLWlucHV0IHtcbiAgICBib3JkZXItcmFkaXVzOjEwcHg7XG4gICAgbWFyZ2luLWJvdHRvbToxMHB4O1xuICB9XG59XG5cblxuQG1lZGlhIChtaW4td2lkdGg6NTc2cHgpe1xuICBoMSB7XG4gICAgZm9udC1zaXplOjYwcHg7XG4gICAgbWFyZ2luLXRvcDozMHB4O1xuICAgIG1hcmdpbi1ib3R0b206MzBweDtcbiAgfVxuXG4gIGZvcm0ge1xuICAgIG1heC13aWR0aDo4MDBweDtcbiAgICBtYXJnaW46YXV0bztcbiAgfVxuXG4gIGlvbi1pbnB1dCB7XG4gICAgbWFyZ2luLWJvdHRvbTo0MHB4O1xuICB9XG5cbiAgI2J1dHRvbnMge1xuICAgIGRpc3BsYXk6ZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjpyb3c7XG4gICAganVzdGlmeS1jb250ZW50OnNwYWNlLWFyb3VuZDtcbiAgICBtYXgtd2lkdGg6NTAlO1xuICAgIG1hcmdpbjphdXRvO1xuICB9XG59XG5cblxuXG5cblxuXG4iXX0= */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthentificationPage } from './authentification.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthentificationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthentificationPageRoutingModule {}\n","export default \"<app-header></app-header>\\n\\n<ion-content>\\n    <!-- Voici le contenu normal de la page, qui s'affiche si l'utilisateur n'est pas connecté -->\\n    <div *ngIf=\\\"!isConnected\\\" class=\\\"contenu\\\">\\n        <h1>\\n            Se connecter\\n        </h1>\\n        <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"authentification()\\\">\\n            <ion-label class=\\\"ion-margin-bottom\\\" color=\\\"light\\\">\\n                Email\\n            </ion-label>\\n            <ion-input (keyup)=\\\"authentificationKey($event)\\\" type=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\n            <ion-label class=\\\"ion-margin-bottom\\\" color=\\\"light\\\">\\n                Mot de passe\\n            </ion-label>\\n            <ion-input (keyup)=\\\"authentificationKey($event)\\\" type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n            <div id=\\\"buttons\\\">\\n                <ion-button [disabled]=\\\"!this.isValid\\\" type=\\\"submit\\\" size=\\\"large\\\">Valider</ion-button>\\n                <ion-button size=\\\"large\\\" [routerLink]=\\\"['/reinitialisation-mdp']\\\" class=\\\"ion-text-wrap\\\">Mot de passe oublié</ion-button>\\n            </div>\\n        </form>\\n    </div>\\n    <!-- S'il est connecté, on ne donne pas accès à cette page (et donc à la requête) -->\\n    <div *ngIf=\\\"isConnected\\\" class=\\\"contenu\\\">\\n        <h1>Vous êtes déjà connectés</h1>\\n    </div>\\n\\n</ion-content>\";","import { InjectionToken, Injectable, Inject, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { mergeMap } from 'rxjs/operators';\nimport { from } from 'rxjs';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport * as ɵngcc0 from '@angular/core';\nconst JWT_OPTIONS = new InjectionToken('JWT_OPTIONS');\n\n// tslint:disable:no-bitwise\nclass JwtHelperService {\n    constructor(config = null) {\n        this.tokenGetter = (config && config.tokenGetter) || function () { };\n    }\n    urlBase64Decode(str) {\n        let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n        switch (output.length % 4) {\n            case 0: {\n                break;\n            }\n            case 2: {\n                output += \"==\";\n                break;\n            }\n            case 3: {\n                output += \"=\";\n                break;\n            }\n            default: {\n                throw new Error(\"Illegal base64url string!\");\n            }\n        }\n        return this.b64DecodeUnicode(output);\n    }\n    // credits for decoder goes to https://github.com/atk\n    b64decode(str) {\n        const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        let output = \"\";\n        str = String(str).replace(/=+$/, \"\");\n        if (str.length % 4 === 1) {\n            throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n        }\n        for (\n        // initialize result and counters\n        let bc = 0, bs, buffer, idx = 0; \n        // get next character\n        (buffer = str.charAt(idx++)); \n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n            ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n                // and if not first of each 4 characters,\n                // convert the first 8 bits to one ascii character\n                bc++ % 4)\n            ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\n            : 0) {\n            // try to find character in table (0-63, not found => -1)\n            buffer = chars.indexOf(buffer);\n        }\n        return output;\n    }\n    b64DecodeUnicode(str) {\n        return decodeURIComponent(Array.prototype.map\n            .call(this.b64decode(str), (c) => {\n            return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n        })\n            .join(\"\"));\n    }\n    decodeToken(token = this.tokenGetter()) {\n        if (!token || token === \"\") {\n            return null;\n        }\n        const parts = token.split(\".\");\n        if (parts.length !== 3) {\n            throw new Error(\"The inspected token doesn't appear to be a JWT. Check to make sure it has three parts and see https://jwt.io for more.\");\n        }\n        const decoded = this.urlBase64Decode(parts[1]);\n        if (!decoded) {\n            throw new Error(\"Cannot decode the token.\");\n        }\n        return JSON.parse(decoded);\n    }\n    getTokenExpirationDate(token = this.tokenGetter()) {\n        let decoded;\n        decoded = this.decodeToken(token);\n        if (!decoded || !decoded.hasOwnProperty(\"exp\")) {\n            return null;\n        }\n        const date = new Date(0);\n        date.setUTCSeconds(decoded.exp);\n        return date;\n    }\n    isTokenExpired(token = this.tokenGetter(), offsetSeconds) {\n        if (!token || token === \"\") {\n            return true;\n        }\n        const date = this.getTokenExpirationDate(token);\n        offsetSeconds = offsetSeconds || 0;\n        if (date === null) {\n            return false;\n        }\n        return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\n    }\n    getAuthScheme(authScheme, request) {\n        if (typeof authScheme === \"function\") {\n            return authScheme(request);\n        }\n        return authScheme;\n    }\n}\nJwtHelperService.ɵfac = function JwtHelperService_Factory(t) { return new (t || JwtHelperService)(ɵngcc0.ɵɵinject(JWT_OPTIONS)); };\nJwtHelperService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JwtHelperService, factory: JwtHelperService.ɵfac });\nJwtHelperService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [JWT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JwtHelperService, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [JWT_OPTIONS]\n            }] }]; }, null); })();\n\nclass JwtInterceptor {\n    constructor(config, jwtHelper, document) {\n        this.jwtHelper = jwtHelper;\n        this.document = document;\n        this.standardPorts = [\"80\", \"443\"];\n        this.tokenGetter = config.tokenGetter;\n        this.headerName = config.headerName || \"Authorization\";\n        this.authScheme =\n            config.authScheme || config.authScheme === \"\"\n                ? config.authScheme\n                : \"Bearer \";\n        this.allowedDomains = config.allowedDomains || [];\n        this.disallowedRoutes = config.disallowedRoutes || [];\n        this.throwNoTokenError = config.throwNoTokenError || false;\n        this.skipWhenExpired = config.skipWhenExpired;\n    }\n    isAllowedDomain(request) {\n        const requestUrl = new URL(request.url, this.document.location.origin);\n        // If the host equals the current window origin,\n        // the domain is allowed by default\n        if (requestUrl.host === this.document.location.host) {\n            return true;\n        }\n        // If not the current domain, check the allowed list\n        const hostName = `${requestUrl.hostname}${requestUrl.port && !this.standardPorts.includes(requestUrl.port)\n            ? \":\" + requestUrl.port\n            : \"\"}`;\n        return (this.allowedDomains.findIndex((domain) => typeof domain === \"string\"\n            ? domain === hostName\n            : domain instanceof RegExp\n                ? domain.test(hostName)\n                : false) > -1);\n    }\n    isDisallowedRoute(request) {\n        const requestedUrl = new URL(request.url, this.document.location.origin);\n        return (this.disallowedRoutes.findIndex((route) => {\n            if (typeof route === \"string\") {\n                const parsedRoute = new URL(route, this.document.location.origin);\n                return (parsedRoute.hostname === requestedUrl.hostname &&\n                    parsedRoute.pathname === requestedUrl.pathname);\n            }\n            if (route instanceof RegExp) {\n                return route.test(request.url);\n            }\n            return false;\n        }) > -1);\n    }\n    handleInterception(token, request, next) {\n        const authScheme = this.jwtHelper.getAuthScheme(this.authScheme, request);\n        let tokenIsExpired = false;\n        if (!token && this.throwNoTokenError) {\n            throw new Error(\"Could not get token from tokenGetter function.\");\n        }\n        if (this.skipWhenExpired) {\n            tokenIsExpired = token ? this.jwtHelper.isTokenExpired(token) : true;\n        }\n        if (token && tokenIsExpired && this.skipWhenExpired) {\n            request = request.clone();\n        }\n        else if (token) {\n            request = request.clone({\n                setHeaders: {\n                    [this.headerName]: `${authScheme}${token}`,\n                },\n            });\n        }\n        return next.handle(request);\n    }\n    intercept(request, next) {\n        if (!this.isAllowedDomain(request) || this.isDisallowedRoute(request)) {\n            return next.handle(request);\n        }\n        const token = this.tokenGetter(request);\n        if (token instanceof Promise) {\n            return from(token).pipe(mergeMap((asyncToken) => {\n                return this.handleInterception(asyncToken, request, next);\n            }));\n        }\n        else {\n            return this.handleInterception(token, request, next);\n        }\n    }\n}\nJwtInterceptor.ɵfac = function JwtInterceptor_Factory(t) { return new (t || JwtInterceptor)(ɵngcc0.ɵɵinject(JWT_OPTIONS), ɵngcc0.ɵɵinject(JwtHelperService), ɵngcc0.ɵɵinject(DOCUMENT)); };\nJwtInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JwtInterceptor, factory: JwtInterceptor.ɵfac });\nJwtInterceptor.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [JWT_OPTIONS,] }] },\n    { type: JwtHelperService },\n    { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JwtInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [JWT_OPTIONS]\n            }] }, { type: JwtHelperService }, { type: Document, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\nclass JwtModule {\n    constructor(parentModule) {\n        if (parentModule) {\n            throw new Error(\"JwtModule is already loaded. It should only be imported in your application's main module.\");\n        }\n    }\n    static forRoot(options) {\n        return {\n            ngModule: JwtModule,\n            providers: [\n                {\n                    provide: HTTP_INTERCEPTORS,\n                    useClass: JwtInterceptor,\n                    multi: true,\n                },\n                options.jwtOptionsProvider || {\n                    provide: JWT_OPTIONS,\n                    useValue: options.config,\n                },\n                JwtHelperService,\n            ],\n        };\n    }\n}\nJwtModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: JwtModule });\nJwtModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function JwtModule_Factory(t) { return new (t || JwtModule)(ɵngcc0.ɵɵinject(JwtModule, 12)); } });\nJwtModule.ctorParameters = () => [\n    { type: JwtModule, decorators: [{ type: Optional }, { type: SkipSelf }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JwtModule, [{\n        type: NgModule\n    }], function () { return [{ type: JwtModule, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }]; }, null); })();\n\n/*\n * Public API Surface of angular-jwt\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { JWT_OPTIONS, JwtHelperService, JwtInterceptor, JwtModule };\n\n//# sourceMappingURL=auth0-angular-jwt.js.map"],"sourceRoot":"webpack:///"}