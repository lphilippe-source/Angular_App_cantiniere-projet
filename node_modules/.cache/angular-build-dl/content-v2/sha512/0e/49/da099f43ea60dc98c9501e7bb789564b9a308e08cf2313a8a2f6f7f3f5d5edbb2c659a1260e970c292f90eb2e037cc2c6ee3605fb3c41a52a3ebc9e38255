{"version":3,"sources":["webpack:///src/app/header/mypop/mypop.component.html","webpack:///src/app/cantiniere-api.service.ts","webpack:///src/app/header/header.component.scss","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/header/mypop/mypop.component.ts"],"names":["BASE_URL","CantiniereAPIService","http","email","post","observe","id","token","options","headers","get","week","body","patch","user","userId","imageBase64","image","imagePath","image64","put","emailP","passwordP","credentials","password","providedIn","HeaderComponent","popoverController","service","route","nav","avatar","sessionStorage","getItem","isConnected","JSON","parse","ev","create","component","cssClass","event","translucent","componentProps","popover","currentPopover","present","removeItem","url","location","reload","navigate","selector","template","MypopComponent","dismiss","close"],"mappings":"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","file":"default~authentification-authentification-module~carte-carte-module~configuration-configuration-modu~aab45f9e-es5.js","sourcesContent":["export default \"<ion-list color=\\\"primary\\\">\\n  <ion-item [routerLink]=\\\"['/panier']\\\" (click)=\\\"close()\\\" color=\\\"primary\\\">Panier</ion-item>\\n  <ion-item *ngIf=\\\"!isConnected\\\" [routerLink]=\\\"['/inscription']\\\" (click)=\\\"close()\\\" color=\\\"primary\\\">S'inscrire</ion-item>\\n  <ion-item *ngIf=\\\"!isConnected\\\" [routerLink]=\\\"['/authentification']\\\" (click)=\\\"close()\\\" color=\\\"primary\\\">Se connecter</ion-item>\\n  <ion-item *ngIf=\\\"isConnected\\\" [routerLink]=\\\"['/infos-user']\\\" (click)=\\\"close()\\\" color=\\\"primary\\\">{{user.firstname}}</ion-item>\\n  <ion-item *ngIf=\\\"isConnected\\\" (click)=\\\"disconnect()\\\" color=\\\"primary\\\">DÃ©connexion</ion-item>\\n</ion-list>\";","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from './model/User';\nimport { Image } from './model/Image';\n\nconst BASE_URL = \"http://212.227.203.194:8080/lunchtime/\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CantiniereAPIService {\n\n  public BASE_URL = BASE_URL\n\n  constructor(private http: HttpClient) {}\n\n  forgotPassword(email: string){\n    return this.http.post(BASE_URL + \"forgotpassword?email=\" + email, {observe : \"response\"})\n  }\n  \n  findUser(id: number, token: string){\n\n    let options = {\n      headers: {\"Authorization\": token}\n    }\n\n    return this.http.get(BASE_URL + \"user/find/\" + id, options)\n  }\n\n  findAllUser(token:string){\n    let options = {\n      headers: {\"Authorization\": token}\n    }\n\n    return this.http.get(BASE_URL+\"user/findall\",options);\n  }\n\n  findImg(id:number,token:string){\n    let options = {\n      headers: {\"Authorization\": token}\n    }\n\n    return this.http.get(BASE_URL+\"user/findimg/\"+id,options);\n  }\n\n  getMenu(){\n    return this.http.get(BASE_URL + \"menu/findallavailablefortoday\")\n  }\n  getMeal(week:number){\n    return this.http.get(BASE_URL + \"meal/findallavailableforweek/\"+week)\n  }\n  getMenuImg(id:number){\n    return this.http.get(BASE_URL + \"menu/findimg/\"+id)\n  }\n  getMealImg(id:number){\n    return this.http.get(BASE_URL + \"meal/findimg/\"+id)\n  }\n  updateMenuImage(id:number, body){\n    // let options = {\n    //   headers: {\"Authorization\": token}\n    // }\n    // , {headers: options.headers}\n    return this.http.patch(BASE_URL + \"menu/updateimg/\"+ id, body)\n  }\n  \n\n  updateUser(user: any, token: string){\n    let options = {\n      headers: {\"Authorization\": token}\n    }\n\n    return this.http.patch(BASE_URL + \"user/update/\" + user.id, user, {headers: options.headers, observe : \"response\"})\n  }\n\n  updateUserImg(userId: number, imageBase64: string, token: string){\n    let options = {\n      headers : {\"Authorization\": token}\n    }\n\n    let image:Image = {imagePath: \"img/0default.png\", image64: imageBase64}\n\n    return this.http.patch(BASE_URL + \"user/updateimg/\" + userId, image, {headers: options.headers})\n  }\n\n  register(user:User){\n    return this.http.put(BASE_URL+\"user/register\",user);\n  }\n\n  authentification(emailP:string,passwordP:string){\n    let credentials = {\n      email:emailP,\n      password:passwordP\n    };\n    return this.http.post(BASE_URL+\"login\",credentials,{observe:\"response\"});\n  }\n\n}","export default \"ion-header {\\n  background-color: #324553;\\n}\\n\\n.clickable {\\n  cursor: pointer;\\n}\\n\\nion-img, img {\\n  max-width: 40px;\\n  max-height: 40px;\\n  margin-right: 0px;\\n}\\n\\nion-icon {\\n  font-size: 40px;\\n}\\n\\nion-icon, div.ion-hide-sm-down {\\n  position: absolute;\\n  right: 0px;\\n  margin-right: 0px;\\n}\\n\\ndiv {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\ndiv > * {\\n  margin: auto 7px auto 7px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2hlYWRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0FBQ0o7O0FBRUM7RUFDSSxlQUFBO0FBQ0w7O0FBRUE7RUFDSSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtBQUNKOztBQUVBO0VBQ0ksZUFBQTtBQUNKOztBQUVBO0VBQ0ksa0JBQUE7RUFDQSxVQUFBO0VBQ0EsaUJBQUE7QUFDSjs7QUFFQTtFQUNJLGFBQUE7RUFDQSxtQkFBQTtBQUNKOztBQUVBO0VBQ0kseUJBQUE7QUFDSiIsImZpbGUiOiJoZWFkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiMzMjQ1NTM7XG4gfVxuXG4gLmNsaWNrYWJsZSB7XG4gICAgIGN1cnNvcjpwb2ludGVyO1xuIH1cblxuaW9uLWltZyAsIGltZ3tcbiAgICBtYXgtd2lkdGg6NDBweDtcbiAgICBtYXgtaGVpZ2h0OjQwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OjBweDtcbn1cblxuaW9uLWljb24ge1xuICAgIGZvbnQtc2l6ZTo0MHB4O1xufVxuXG5pb24taWNvbiAsIGRpdi5pb24taGlkZS1zbS1kb3duIHtcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICByaWdodDowcHg7XG4gICAgbWFyZ2luLXJpZ2h0OjBweDtcbn1cblxuZGl2IHtcbiAgICBkaXNwbGF5OmZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246cm93O1xufVxuXG5kaXYgPiAqIHtcbiAgICBtYXJnaW46YXV0byA3cHggYXV0byA3cHg7XG59XG4iXX0= */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NavController, PopoverController } from '@ionic/angular';\nimport { CantiniereAPIService } from '../cantiniere-api.service';\nimport { User } from '../model/User';\nimport { MypopComponent } from './mypop/mypop.component';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements  OnInit {\n  // Ces variables vont Ãªtre bindÃ©es dans le template afin d'afficher :\n  // - d'une part un header diffÃ©rent selon que l'utilisateur est authentifiÃ© ou non\n  // - les infos de cet utilisateur (nom/prÃ©nom/avatar)\n  @Input() user: User;\n  @Input() avatar: string = \"assets/images/guest.png\";\n  @Input() isConnected: boolean;\n  // Les deux variables ci-dessus doivent Ãªtre lues par la page Home, je n'ai pas trouvÃ© d'autres moyens pour que cette page rÃ©initialise ce composant Header\n  currentPopover;\n\n  constructor(\n    public popoverController: PopoverController,\n    private service: CantiniereAPIService,\n    private route: Router,\n    private nav:NavController\n  ) { }\n\n  ngOnInit() {\n     let token: string = sessionStorage.getItem(\"JWT\");\n    // Si le token est prÃ©sent, c'est que l'utilisateur est connectÃ© et que ses donnÃ©es sont prÃ©sentes dans le sessionStorage\n      if (token) {\n      this.isConnected = true;\n      // Le sessionStorage ne pouvant contenir que des string, les infos de l'user sont au format JSON stringifiÃ©, qu'il faut donc parser pour les rÃ©cupÃ©rer\n      this.user = JSON.parse(sessionStorage.getItem(\"User\"));\n      this.avatar = this.service.BASE_URL;\n      let image = (this.user.image.imagePath) ? this.user.image.imagePath : this.user.image.image64;\n      this.avatar += image;\n    }\n    else {\n      this.isConnected = false;\n    }\n  }\n\n  async menuPopover(ev: any) {\n    // Le PopOver permet d'ouvrir un menu sur le clique de l'icÃ´ne burger sur portable\n    const popover = await this.popoverController.create({\n      component: MypopComponent,\n      cssClass: 'headerPopover',\n      event: ev,\n      translucent: true,\n      componentProps: {\n        // On doit passer ces deux valeurs pour que le PopOver les affiche\n        \"isConnected\": this.isConnected,\n        \"user\": this.user\n      }\n    });\n    this.currentPopover = popover;\n    return await popover.present();\n  }\n\n  disconnect() {\n    sessionStorage.removeItem(\"JWT\");\n    sessionStorage.removeItem(\"User\");\n    this.avatar = \"assets/images/guest.png\";\n    this.isConnected = false;\n    if (this.route.url === \"/home\"){\n      location.reload();\n    }\n    else {\n      this.route.navigate([\"home\"]);\n    }\n    // this.nav\n  }\n\n}\n\n","export default \"<ion-header>\\n    <ion-grid>\\n        <ion-row class=\\\"ion-justify-content-between\\\">\\n            <ion-col>\\n                <div>\\n                    <ion-img *ngIf=\\\"isConnected\\\" (click)=\\\"disconnect()\\\" src=\\\"/assets/images/logoDeco.png\\\" alt=\\\"DÃ©connexion\\\" class=\\\"ion-hide-sm-down clickable\\\"></ion-img>\\n                    <ion-img [routerLink]=\\\"['/home']\\\" src=\\\"/assets/images/logo.png\\\" alt=\\\"Retour Ã  l'accueil\\\" id=\\\"logo\\\" class=\\\"clickable\\\"></ion-img>\\n                </div>\\n            </ion-col>\\n            <ion-col>\\n                <div class=\\\"ion-hide-sm-down\\\" width-sm=\\\"0\\\">\\n                    <ion-button *ngIf=\\\"!isConnected\\\" [routerLink]=\\\"['/inscription']\\\">S'inscrire</ion-button>\\n                    <ion-button *ngIf=\\\"!isConnected\\\" [routerLink]=\\\"['/authentification']\\\">Se connecter</ion-button>\\n                    <ion-button *ngIf=\\\"isConnected\\\" [routerLink]=\\\"['/infos-user']\\\">{{user.firstname}}</ion-button>\\n                    <ion-img [routerLink]=\\\"['/panier']\\\" src=\\\"/assets/images/panier.png\\\" alt=\\\"Panier\\\" class=\\\"clickable\\\"></ion-img>\\n                    <ion-img [src]=\\\"avatar\\\" alt=\\\"Avatar\\\"></ion-img>\\n                </div>\\n                <img [src]=\\\"avatar\\\" alt=\\\"Avatar\\\" class=\\\"ion-hide-sm-up\\\">\\n                <ion-icon (click)=\\\"menuPopover($event)\\\" name=\\\"menu-outline\\\" class=\\\"ion-hide-sm-up\\\" size-sm=\\\"1\\\"></ion-icon>\\n            </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n</ion-header>\\n\";","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PopoverController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-mypop',\n  templateUrl: './mypop.component.html'\n})\nexport class MypopComponent implements OnInit {\n\n  @Input(\"user\") user:string;\n  @Input(\"isConnected\") isConnected:boolean;\n\n  constructor(public popover: PopoverController, private route:Router) { }\n\n  ngOnInit() { }\n  \n  close(){\n    this.popover.dismiss();\n  }\n\n  disconnect(){\n    sessionStorage.removeItem(\"JWT\");\n    sessionStorage.removeItem(\"User\");\n    this.isConnected = false;\n    if (this.route.url === \"/home\"){\n      location.reload();\n    }\n    else {\n      this.route.navigate([\"home\"]);\n    }\n    this.close();\n  }\n}\n"]}