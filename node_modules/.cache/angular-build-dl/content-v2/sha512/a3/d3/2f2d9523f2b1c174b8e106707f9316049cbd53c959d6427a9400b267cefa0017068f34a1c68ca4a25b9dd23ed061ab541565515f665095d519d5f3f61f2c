{"version":3,"sources":["webpack:///src/app/modal/modal-routing.module.ts","webpack:///src/app/cantiniere-api.service.ts","webpack:///src/app/modal/modal.module.ts"],"names":["routes","path","component","ModalPageRoutingModule","imports","forChild","exports","BASE_URL","CantiniereAPIService","http","email","post","observe","id","token","options","headers","get","week","body","patch","user","userId","imageBase64","image","imagePath","image64","put","emailP","passwordP","credentials","password","providedIn","ModalPageModule","declarations"],"mappings":"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","file":"modal-modal-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ModalPage } from './modal.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ModalPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ModalPageRoutingModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from './model/User';\nimport { Image } from './model/Image';\n\nconst BASE_URL = \"http://212.227.203.194:8080/lunchtime/\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CantiniereAPIService {\n\n  public BASE_URL = BASE_URL\n\n  constructor(private http: HttpClient) {}\n\n  forgotPassword(email: string){\n    return this.http.post(BASE_URL + \"forgotpassword?email=\" + email, {observe : \"response\"})\n  }\n  \n  findUser(id: number, token: string){\n\n    let options = {\n      headers: {\"Authorization\": token}\n    }\n\n    return this.http.get(BASE_URL + \"user/find/\" + id, options)\n  }\n\n  findAllUser(token:string){\n    let options = {\n      headers: {\"Authorization\": token}\n    }\n\n    return this.http.get(BASE_URL+\"user/findall\",options);\n  }\n\n  findImg(id:number,token:string){\n    let options = {\n      headers: {\"Authorization\": token}\n    }\n\n    return this.http.get(BASE_URL+\"user/findimg/\"+id,options);\n  }\n\n  getMenu(){\n    return this.http.get(BASE_URL + \"menu/findallavailablefortoday\")\n  }\n  getMeal(week:number){\n    return this.http.get(BASE_URL + \"meal/findallavailableforweek/\"+week)\n  }\n  getMenuImg(id:number){\n    return this.http.get(BASE_URL + \"menu/findimg/\"+id)\n  }\n  getMealImg(id:number){\n    return this.http.get(BASE_URL + \"meal/findimg/\"+id)\n  }\n  updateMenuImage(id:number, body){\n    // let options = {\n    //   headers: {\"Authorization\": token}\n    // }\n    // , {headers: options.headers}\n    return this.http.patch(BASE_URL + \"menu/updateimg/\"+ id, body)\n  }\n  \n\n  updateUser(user: any, token: string){\n    let options = {\n      headers: {\"Authorization\": token}\n    }\n\n    return this.http.patch(BASE_URL + \"user/update/\" + user.id, user, {headers: options.headers, observe : \"response\"})\n  }\n\n  updateUserImg(userId: number, imageBase64: string, token: string){\n    let options = {\n      headers : {\"Authorization\": token}\n    }\n\n    let image:Image = {imagePath: \"img/0default.png\", image64: imageBase64}\n\n    return this.http.patch(BASE_URL + \"user/updateimg/\" + userId, image, {headers: options.headers})\n  }\n\n  register(user:User){\n    return this.http.put(BASE_URL+\"user/register\",user);\n  }\n\n  authentification(emailP:string,passwordP:string){\n    let credentials = {\n      email:emailP,\n      password:passwordP\n    };\n    return this.http.post(BASE_URL+\"login\",credentials,{observe:\"response\"});\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ModalPageRoutingModule } from './modal-routing.module';\n\nimport { ModalPage } from './modal.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ModalPageRoutingModule\n  ],\n  declarations: [ModalPage]\n})\nexport class ModalPageModule {}\n"]}